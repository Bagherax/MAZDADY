package mazdady.support;

import java.util.ArrayList;
import java.util.List;

public class LiveChatManager {
    private List<ChatMessage> chatHistory = new ArrayList<>();
    private boolean isAgentConnected = false;
    private String currentSessionId;

    public void startChatSession() {
        this.currentSessionId = "chat_" + System.currentTimeMillis();
        this.isAgentConnected = false;
        System.out.println("تم بدء جلسة دردشة جديدة: " + currentSessionId);
    }

    public void sendMessage(String message, boolean isUser) {
        ChatMessage chatMessage = new ChatMessage(message, isUser, System.currentTimeMillis());
        chatHistory.add(chatMessage);
        
        if (isUser) {
            // في الإنتاج: إرسال الرسالة إلى فريق الدعم عبر WebSocket
            forwardToSupportAgent(message);
        }
    }

    private void forwardToSupportAgent(String message) {
        // محاكاة اتصال بالوكيل
        System.out.println("تم إرسال الرسالة لفريق الدعم: " + message);
        simulateAgentResponse();
    }

    private void simulateAgentResponse() {
        // في الإنتاج: هذا سيكون ردًا حقيقيًا من الوكيل
        new Thread(() -> {
            try {
                Thread.sleep(2000); // تأخير واقعي
                String response = "شكرًا لاتصالك! كيف يمكنني مساعدتك اليوم؟";
                sendMessage(response, false);
                isAgentConnected = true;
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
            }
        }).start();
    }

    public List<ChatMessage> getChatHistory() {
        return new ArrayList<>(chatHistory);
    }

    public boolean isChatActive() {
        return currentSessionId != null;
    }

    public static class ChatMessage {
        private String content;
        private boolean isUser;
        private long timestamp;

        public ChatMessage(String content, boolean isUser, long timestamp) {
            this.content = content;
            this.isUser = isUser;
            this.timestamp = timestamp;
        }

        // Getters
        public String getContent() { return content; }
        public boolean isUser() { return isUser; }
        public long getTimestamp() { return timestamp; }
    }
}