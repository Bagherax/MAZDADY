package mazdady.support;

import java.util.List;
import java.util.Map;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ConcurrentHashMap;
import java.util.stream.Collectors;

/**
 * مدير المحادثات الحية
 * يدير:
 * - جميع المحادثات النشطة
 * - تعيين الوكلاء
 * - تتبع الأداء
 */
public final class LiveChatManager {
    private final Map<String, LiveChat.ChatSession> activeSessions = new ConcurrentHashMap<>();
    private final List<AlHelpdesk.SupportAgent> agents = new java.util.ArrayList<>();

    public CompletableFuture<LiveChat.ChatResult> assignAgentToSessionAsync(String sessionId, String agentId) {
        return CompletableFuture.supplyAsync(() -> {
            LiveChat.ChatSession session = activeSessions.get(sessionId);
            if (session == null) {
                return LiveChat.ChatResult.failure("Session not found: " + sessionId);
            }

            AlHelpdesk.SupportAgent agent = agents.stream()
                .filter(a -> a.getId().equals(agentId) && a.isAvailable())
                .findFirst()
                .orElse(null);

            if (agent == null) {
                return LiveChat.ChatResult.failure("Agent not available: " + agentId);
            }

            agent.setAvailable(false);
            session.setAgentName(agent.getName());
            return LiveChat.ChatResult.success("Agent assigned: " + agent.getName(), sessionId);
        });
    }

    public List<LiveChat.ChatSession> getActiveSessionsForAgent(String agentName) {
        return activeSessions.values().stream()
            .filter(session -> session.getAgentName() != null && session.getAgentName().equals(agentName))
            .collect(Collectors.toList());
    }

    public void closeSession(String sessionId) {
        LiveChat.ChatSession session = activeSessions.remove(sessionId);
        if (session != null) {
            System.out.println("LIVE CHAT MANAGER: Session closed: " + sessionId);
        }
    }

    public int getActiveSessionCount() {
        return activeSessions.size();
    }
}