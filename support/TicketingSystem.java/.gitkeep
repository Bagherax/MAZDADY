package mazdady.support;

import java.util.List;
import java.util.Map;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ConcurrentHashMap;
import java.util.stream.Collectors;

/**
 * نظام إدارة التذاكر (الواجهة الموحدة)
 */
public final class TicketingSystem {
    private final Map<String, Ticketing.Ticket> tickets = new ConcurrentHashMap<>();
    private final List<AlHelpdesk.SupportAgent> agents = new java.util.ArrayList<>();

    public CompletableFuture<Ticketing.TicketResult> escalateTicketToAgentAsync(String ticketId, String agentId) {
        return CompletableFuture.supplyAsync(() -> {
            Ticketing.Ticket ticket = tickets.get(ticketId);
            if (ticket == null) {
                return Ticketing.TicketResult.failure("Ticket not found: " + ticketId);
            }

            AlHelpdesk.SupportAgent agent = agents.stream()
                .filter(a -> a.getId().equals(agentId) && a.isAvailable())
                .findFirst()
                .orElse(null);

            if (agent == null) {
                return Ticketing.TicketResult.failure("Agent not available: " + agentId);
            }

            ticket.setAssignedAgent(agent.getName());
            ticket.setStatus(Ticketing.TicketStatus.IN_PROGRESS);

            return Ticketing.TicketResult.success("Ticket escalated to agent: " + agent.getName(), ticketId);
        });
    }

    public List<Ticketing.Ticket> getOpenTickets() {
        return tickets.values().stream()
            .filter(ticket -> ticket.getStatus() == Ticketing.TicketStatus.OPEN)
            .collect(Collectors.toList());
    }

    public List<Ticketing.Ticket> getUserTickets(String userId) {
        return tickets.values().stream()
            .filter(ticket -> ticket.getUserId().equals(userId))
            .collect(Collectors.toList());
    }

    public int getOpenTicketCount() {
        return (int) tickets.values().stream()
            .filter(ticket -> ticket.getStatus() == Ticketing.TicketStatus.OPEN)
            .count();
    }
}