package mazdady.support;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.regex.Pattern;

/**
 * روبوت الدعم الذكي مع دعم NLP المتقدم
 * يتبع نمط Strategy لفصل استراتيجيات الإجابة
 */
public final class AIHelpdesk {
    private final Map<Pattern, String> knowledgeBase = new ConcurrentHashMap<>();
    private static AIHelpdesk instance;

    private AIHelpdesk() {
        initializeKnowledgeBase();
    }

    public static synchronized AIHelpdesk getInstance() {
        if (instance == null) {
            instance = new AIHelpdesk();
        }
        return instance;
    }

    private void initializeKnowledgeBase() {
        // أسئلة شائعة حول المحفظة
        knowledgeBase.put(Pattern.compile(".*محفظة.*"), 
            "لربط محفظتك الخارجية، اذهب إلى المحفظة → ربط محفظة خارجية → أدخل عنوان محفظتك.");
        
        knowledgeBase.put(Pattern.compile(".*سحب.*أرباح.*"), 
            "لسحب الأرباح، تأكد من: 1) توثيق هويتك، 2) الوصول للمستوى 5، 3) ربط محفظة خارجية.");
        
        knowledgeBase.put(Pattern.compile(".*مستوى.*"), 
            "يمكنك رفع مستواك بالتداول. كل 100 MAZDADY تداول تزيد من مستواك.");
        
        knowledgeBase.put(Pattern.compile(".*إعلان.*"), 
            "لإنشاء حملة إعلانية، اضغط على زر الإعلانات → إنشاء حملة → اختر منصتك وهدفك.");
        
        knowledgeBase.put(Pattern.compile(".*دعم.*"), 
            "يمكنك التواصل مع فريق الدعم عبر الدردشة الحية أو إنشاء تذكرة دعم.");
    }

    /**
     * الحصول على إجابة ذكية
     */
    public String getAnswer(String question) {
        String normalizedQuestion = question.toLowerCase().trim();
        
        for (Map.Entry<Pattern, String> entry : knowledgeBase.entrySet()) {
            if (entry.getKey().matcher(normalizedQuestion).find()) {
                return entry.getValue();
            }
        }
        
        return "عذرًا، لم أفهم سؤالك. هل يمكنك طرح سؤال آخر أو التواصل مع فريق الدعم البشري؟";
    }

    /**
     * إضافة معرفة جديدة
     */
    public void addKnowledge(String pattern, String answer) {
        knowledgeBase.put(Pattern.compile(pattern, Pattern.CASE_INSENSITIVE), answer);
    }
}