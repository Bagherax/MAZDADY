package mazdady.ui;

import android.content.Context;
import android.graphics.drawable.AnimationDrawable;
import android.util.AttributeSet;
import android.view.Gravity;
import android.view.View;
import android.widget.FrameLayout;
import android.widget.ImageView;

import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

/**
 * زر إعلان عائم مع دعم التأثيرات الديناميكية
 * يتبع نمط Observer لإعلام النظام بالتفاعلات
 */
public final class FloatingAdButton extends FrameLayout {
    private final ImageView glowImageView;
    private final ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor();
    private volatile boolean isHidden = false;
    private volatile long displayDuration = 10000; // 10 ثواني
    private volatile long hideDuration = 30000; // 30 ثانية

    public FloatingAdButton(Context context, AttributeSet attrs) {
        super(context, attrs);
        this.glowImageView = new ImageView(context);
        initializeButton();
    }

    private void initializeButton() {
        // إعداد صورة الزر مع تأثير اللمعان
        glowImageView.setImageResource(R.drawable.glow_animation);
        glowImageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
        
        LayoutParams params = new LayoutParams(
            LayoutParams.MATCH_PARENT,
            LayoutParams.MATCH_PARENT
        );
        params.gravity = Gravity.CENTER;
        addView(glowImageView, params);
        
        // تفعيل تأثير اللمعان
        startGlowAnimation();
        
        // تعيين حدث النقر
        setOnClickListener(this::handleClick);
        
        System.out.println("FLOATING AD: Button initialized");
    }

    /**
     * تكوين الزر
     */
    public void configure(long displayDuration, long hideDuration, String adImageUrl) {
        this.displayDuration = displayDuration;
        this.hideDuration = hideDuration;
        
        // في الإنتاج: تحميل صورة الإعلان
        if (adImageUrl != null && !adImageUrl.isEmpty()) {
            loadAdImage(adImageUrl);
        }
        
        System.out.println("FLOATING AD: Button configured with display=" + displayDuration + 
                         "ms, hide=" + hideDuration + "ms");
    }

    /**
     * تفعيل تأثير اللمعان
     */
    private void startGlowAnimation() {
        try {
            if (glowImageView.getDrawable() instanceof AnimationDrawable) {
                AnimationDrawable animation = (AnimationDrawable) glowImageView.getDrawable();
                animation.start();
                System.out.println("FLOATING AD: Glow animation started");
            }
        } catch (Exception e) {
            System.err.println("FLOATING AD ANIMATION ERROR: " + e.getMessage());
        }
    }

    /**
     * تحميل صورة الإعلان
     */
    private void loadAdImage(String imageUrl) {
        // في الإنتاج: استخدام Glide أو Picasso لتحميل الصورة
        System.out.println("FLOATING AD: Loading image from " + imageUrl);
    }

    /**
     * التعامل مع النقر على الزر
     */
    private void handleClick(View view) {
        // إشعارات النظام بحدث النقر
        notifyClickEvent();
        
        // إخفاء الزر مؤقتًا
        hideTemporarily();
        
        System.out.println("FLOATING AD: Button clicked");
    }

    /**
     * إخفاء الزر مؤقتًا
     */
    private void hideTemporarily() {
        isHidden = true;
        setVisibility(GONE);
        
        // جدولة إظهار الزر مرة أخرى
        scheduler.schedule(
            this::showButton,
            hideDuration,
            TimeUnit.MILLISECONDS
        );
        
        System.out.println("FLOATING AD: Button hidden for " + hideDuration + "ms");
    }

    /**
     * إظهار الزر
     */
    private void showButton() {
        post(() -> {
            isHidden = false;
            setVisibility(VISIBLE);
            startGlowAnimation();
            System.out.println("FLOATING AD: Button shown again");
        });
    }

    /**
     * إشعارات النظام بحدث النقر
     */
    private void notifyClickEvent() {
        // في الإنتاج: إرسال إشعار للنظام أو السيرفر
        System.out.println("FLOATING AD: Click event notified");
    }

    /**
     * بدء العرض المؤقت
     */
    public void startTemporaryDisplay() {
        setVisibility(VISIBLE);
        isHidden = false;
        
        // جدولة الإخفاء التلقائي
        scheduler.schedule(
            this::hideTemporarily,
            displayDuration,
            TimeUnit.MILLISECONDS
        );
        
        System.out.println("FLOATING AD: Temporary display started for " + displayDuration + "ms");
    }

    /**
     * إيقاف الزر (للاختبارات)
     */
    public void shutdown() {
        scheduler.shutdown();
        setVisibility(GONE);
        System.out.println("FLOATING AD: Button shutdown");
    }

    // --- Getters ---
    public boolean isHidden() { return isHidden; }
    public long getDisplayDuration() { return displayDuration; }
    public long getHideDuration() { return hideDuration; }
}