package mazdady.ui;

import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import mazdady.admin.AdminConfig;
import mazdady.user.UserManager;

public class DynamicLayoutManager {
    private final ViewGroup parentView;
    private final AdminConfig.UIConfig uiConfig;
    private final UserManager userManager;

    public DynamicLayoutManager(ViewGroup parentView) {
        this.parentView = parentView;
        this.uiConfig = AdminConfig.getInstance().getUIConfig();
        this.userManager = UserManager.getInstance();
    }

    public void applyLayout() {
        // تكرار على جميع العناصر المسجلة
        applyElementLayout("buy_button", parentView.findViewById(R.id.buy_button));
        applyElementLayout("sell_button", parentView.findViewById(R.id.sell_button));
        applyElementLayout("ad_banner", parentView.findViewById(R.id.ad_banner));
        applyElementLayout("payment_tools", parentView.findViewById(R.id.payment_tools));
        applyElementLayout("sign_popup", parentView.findViewById(R.id.sign_popup));
    }

    private void applyElementLayout(String elementId, View view) {
        if (view == null) return;

        AdminConfig.UIConfig.ElementConfig config = uiConfig.getElementConfig(elementId);
        if (config == null) return;

        // 1. التحقق من الرؤية
        boolean isVisible = shouldElementBeVisible(config);
        view.setVisibility(isVisible ? View.VISIBLE : View.GONE);
        if (!isVisible) return;

        // 2. تطبيق الموضع
        if (view.getLayoutParams() instanceof RelativeLayout.LayoutParams) {
            RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams) view.getLayoutParams();
            applyPosition(params, config.getPosition());
            view.setLayoutParams(params);
        }
    }

    private boolean shouldElementBeVisible(AdminConfig.UIConfig.ElementConfig config) {
        // التحقق من الاشتراك
        if (config.isSubscriptionRequired() && !userManager.hasActiveSubscription()) {
            return false;
        }
        // التحقق من المستوى
        if (userManager.getCurrentUser().getLevel() < config.getMinLevel()) {
            return false;
        }
        // الرؤية العامة
        return config.isVisible();
    }

    private void applyPosition(RelativeLayout.LayoutParams params, String position) {
        // إزالة جميع القواعد الحالية
        params.addRule(RelativeLayout.ALIGN_PARENT_TOP, 0);
        params.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM, 0);
        params.addRule(RelativeLayout.ALIGN_PARENT_LEFT, 0);
        params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT, 0);
        params.addRule(RelativeLayout.CENTER_HORIZONTAL, 0);
        params.addRule(RelativeLayout.CENTER_VERTICAL, 0);

        // تطبيق الموضع الجديد
        switch (position) {
            case "top_left":
                params.addRule(RelativeLayout.ALIGN_PARENT_TOP);
                params.addRule(RelativeLayout.ALIGN_PARENT_LEFT);
                break;
            case "top_center":
                params.addRule(RelativeLayout.ALIGN_PARENT_TOP);
                params.addRule(RelativeLayout.CENTER_HORIZONTAL);
                break;
            case "top_right":
                params.addRule(RelativeLayout.ALIGN_PARENT_TOP);
                params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
                break;
            case "bottom_left":
                params.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM);
                params.addRule(RelativeLayout.ALIGN_PARENT_LEFT);
                break;
            case "bottom_right":
                params.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM);
                params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
                break;
            case "center":
                params.addRule(RelativeLayout.CENTER_IN_PARENT);
                break;
            case "sidebar":
                params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
                params.width = 80;
                break;
        }
    }
}