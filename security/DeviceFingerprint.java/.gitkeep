package mazdady.security;

import android.content.Context;
import android.provider.Settings;
import android.telephony.TelephonyManager;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Locale;

/**
 * بصمة الجهاز مع دعم التوليد الآمن
 * يتبع نمط Singleton مع تهيئة آمنة
 */
public final class DeviceFingerprint {
    private final Context context;
    private volatile String cachedFingerprint;

    private DeviceFingerprint(Context context) {
        this.context = context.getApplicationContext();
    }

    public static DeviceFingerprint create(Context context) {
        return new DeviceFingerprint(context);
    }

    /**
     * الحصول على بصمة الجهاز الفريدة
     */
    public String getUniqueDeviceId() {
        if (cachedFingerprint != null) {
            return cachedFingerprint;
        }
        
        synchronized (this) {
            if (cachedFingerprint != null) {
                return cachedFingerprint;
            }
            
            try {
                String deviceId = getDeviceId();
                String androidId = Settings.Secure.getString(
                    context.getContentResolver(), 
                    Settings.Secure.ANDROID_ID
                );
                String locale = Locale.getDefault().toString();
                String buildInfo = android.os.Build.MODEL + android.os.Build.BRAND;

                String rawId = deviceId + androidId + locale + buildInfo;
                cachedFingerprint = sha256(rawId);
                return cachedFingerprint;
            } catch (Exception e) {
                // في حالة الفشل، استخدام وقت التثبيت كـ ID احتياطي
                return "fallback_" + System.currentTimeMillis();
            }
        }
    }

    private String getDeviceId() {
        try {
            TelephonyManager tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
            if (tm != null && tm.getDeviceId() != null) {
                return tm.getDeviceId();
            }
        } catch (SecurityException e) {
            // إذن الهاتف غير ممنوح
        }
        return "no_telephony";
    }

    private String sha256(String input) {
        try {
            MessageDigest digest = MessageDigest.getInstance("SHA-256");
            byte[] hash = digest.digest(input.getBytes("UTF-8"));
            StringBuilder hexString = new StringBuilder();
            for (byte b : hash) {
                String hex = Integer.toHexString(0xff & b);
                if (hex.length() == 1) hexString.append('0');
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException | java.io.UnsupportedEncodingException e) {
            throw new RuntimeException(e);
        }
    }
}