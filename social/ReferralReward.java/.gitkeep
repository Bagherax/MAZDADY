package mazdady.social;

import java.util.Map;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ConcurrentHashMap;

/**
 * مكافآت الإحالة
 * يحسب المكافآت عند دعوة الأصدقاء
 */
public final class ReferralReward {
    private final Map<String, ReferralInfo> referrals = new ConcurrentHashMap<>();
    private static final int REFERRAL_BONUS = 50;

    public CompletableFuture<ReferralResult> processReferralAsync(String referrerId, String refereeId) {
        return CompletableFuture.supplyAsync(() -> {
            if (referrals.containsKey(refereeId)) {
                return ReferralResult.failure("User already referred: " + refereeId);
            }

            referrals.put(refereeId, new ReferralInfo(referrerId, System.currentTimeMillis()));
            return ReferralResult.success("Referral processed for " + referrerId, REFERRAL_BONUS);
        });
    }

    public int getTotalReferralCount(String userId) {
        return (int) referrals.values().stream()
            .filter(info -> info.getReferrerId().equals(userId))
            .count();
    }

    // --- Inner Classes ---
    public static final class ReferralResult {
        private final boolean success;
        private final String message;
        private final int rewardPoints;

        private ReferralResult(boolean success, String message, int rewardPoints) {
            this.success = success;
            this.message = message;
            this.rewardPoints = rewardPoints;
        }

        public static ReferralResult success(String message, int rewardPoints) {
            return new ReferralResult(true, message, rewardPoints);
        }

        public static ReferralResult failure(String message) {
            return new ReferralResult(false, message, 0);
        }

        public boolean isSuccess() { return success; }
        public String getMessage() { return message; }
        public int getRewardPoints() { return rewardPoints; }
    }

    public static final class ReferralInfo {
        private final String referrerId;
        private final long timestamp;

        public ReferralInfo(String referrerId, long timestamp) {
            this.referrerId = referrerId;
            this.timestamp = timestamp;
        }

        public String getReferrerId() { return referrerId; }
        public long getTimestamp() { return timestamp; }
    }
}