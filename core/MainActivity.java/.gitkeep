package mazdady.core;

import android.os.Bundle;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;
import mazdady.admin.AdminConfig;
import mazdady.dev.UnitTests;
import mazdady.i18n.TranslationManager;
import mazdady.ui.DynamicLayoutManager;
import mazdady.ui.DynamicPopupManager;
import mazdady.ui.FloatingAdButton;
import mazdady.ui.StarEffectManager;
import mazdady.user.UserManager;
import mazdady.wallet.WalletManager;

/**
 * النشاط الرئيسي المتكامل مع دعم جميع الميزات المتقدمة
 * يتبع نمط Template Method لفصل خطوات التهيئة
 */
public final class MainActivity extends AppCompatActivity {
    private DynamicPopupManager popupManager;
    private TranslationManager translationManager;
    private TextView balanceView;
    private Button buyButton, sellButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // 1. تشغيل اختبارات الوحدة (للاختبار فقط)
        UnitTests.runAllTests();

        // 2. تهيئة المكونات الأساسية
        initializeComponents();
        
        // 3. تهيئة واجهة المستخدم
        initializeUI();
        
        // 4. تهيئة الأحداث
        initializeEventHandlers();
        
        // 5. عرض تأثيرات الترحيب
        showWelcomeEffects();
        
        // 6. إعداد الزر العائم للإعلانات
        setupFloatingAdButton();
        
        // 7. التحقق من المستخدم الجديد
        checkForNewUser();
        
        // 8. تطبيق التخطيط الديناميكي
        applyDynamicLayout();
        
        // 9. التحقق من الأمان
        performSecurityCheck();
    }

    private void initializeComponents() {
        // تحميل الإعدادات من السيرفر
        AdminConfig.getInstance().loadFromServer();
        
        // تهيئة مديري الواجهة
        popupManager = new DynamicPopupManager(this);
        translationManager = new TranslationManager(this);
    }

    private void initializeUI() {
        // ربط العناصر من التخطيط
        balanceView = findViewById(R.id.balance_view);
        buyButton = findViewById(R.id.buy_button);
        sellButton = findViewById(R.id.sell_button);

        // تحميل رصيد المستخدم وترجمته
        double balance = UserManager.getInstance(this).getCurrentUser().getBalance();
        String balanceText = translationManager.getString("balance_label", String.format("%.2f", balance));
        balanceView.setText(balanceText);

        // ترجمة أزرار التداول
        buyButton.setText(translationManager.getString("buy_button"));
        sellButton.setText(translationManager.getString("sell_button"));

        // تطبيق إعدادات الواجهة الديناميكية
        applyDynamicUI();
    }

    private void initializeEventHandlers() {
        buyButton.setOnClickListener(v -> showBuyPopup());
        sellButton.setOnClickListener(v -> showSellPopup());
        
        // زر السحب (إذا كان موجودًا في التخطيط)
        View withdrawButton = findViewById(R.id.withdraw_button);
        if (withdrawButton != null) {
            withdrawButton.setOnClickListener(v -> handleWithdrawal());
        }
    }

    private void showWelcomeEffects() {
        if (UserManager.getInstance(this).getCurrentUser().hasRecentProfit()) {
            StarEffectManager.showStar(this, findViewById(R.id.main_container));
        }
    }

    private void setupFloatingAdButton() {
        AdminConfig.UIConfig uiConfig = AdminConfig.getInstance().getUIConfig();
        if (!uiConfig.getFloatingAdConfig().isEnabled()) return;

        FloatingAdButton adButton = new FloatingAdButton(this, null);
        adButton.configure(
            uiConfig.getFloatingAdConfig().getDisplayDuration(),
            uiConfig.getFloatingAdConfig().getHideDuration(),
            uiConfig.getFloatingAdConfig().getAdImageUrl()
        );

        ViewGroup.LayoutParams params = new ViewGroup.LayoutParams(120, 120);
        ((ViewGroup) findViewById(android.R.id.content)).addView(adButton, params);
    }

    private void checkForNewUser() {
        if (UserManager.getInstance(this).isNewUser()) {
            showSignUpPopup();
        }
    }

    private void applyDynamicLayout() {
        new DynamicLayoutManager((ViewGroup) findViewById(android.R.id.content)).applyLayout();
    }

    private void performSecurityCheck() {
        // التحقق من جذور الجهاز
        if (mazdady.security.RootDetection.isDeviceRooted()) {
            new mazdady.security.SecurityMonitor(this).reportSuspiciousActivity("ROOTED_DEVICE");
        }

        // التحقق من سلامة التطبيق
        if (!mazdady.security.AppIntegrityChecker.isAppIntegrityValid(this)) {
            new mazdady.security.SecurityMonitor(this).reportSuspiciousActivity("MODIFIED_APP");
        }
    }

    private void handleWithdrawal() {
        WalletManager walletManager = new WalletManager();
        if (walletManager.getConnector().isConnected()) {
            boolean success = walletManager.withdrawMAZDADY(100.0);
            if (success) {
                showPopup(translationManager.getString("withdrawal_success"));
            }
        } else {
            showWalletConnectionPopup();
        }
    }

    private void showBuyPopup() {
        String content = translationManager.getString("buy_popup_content");
        popupManager.showScrollablePopup(translationManager.getString("buy_title"), content);
    }

    private void showSellPopup() {
        String content = translationManager.getString("sell_popup_content");
        popupManager.showScrollablePopup(translationManager.getString("sell_title"), content);
    }

    private void showSignUpPopup() {
        String content = translationManager.getString("signup_welcome");
        popupManager.showScrollablePopup(translationManager.getString("welcome_title"), content);
    }

    private void showWalletConnectionPopup() {
        String conten