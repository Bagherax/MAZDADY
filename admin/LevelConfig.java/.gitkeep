package mazdady.admin;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

/**
 * إعدادات المستويات من لوحة التحكم الإدارية
 * يتبع نمط Builder لبناء الإعدادات تدريجيًا
 */
public final class LevelConfig {
    private final Map<Integer, LevelDefinition> levelDefinitions = new ConcurrentHashMap<>();
    private static LevelConfig instance;

    private LevelConfig() {
        initializeDefaultLevelDefinitions();
    }

    public static synchronized LevelConfig getInstance() {
        if (instance == null) {
            instance = new LevelConfig();
        }
        return instance;
    }

    private void initializeDefaultLevelDefinitions() {
        // تهيئة المستويات الافتراضية
        levelDefinitions.put(1, new LevelDefinition(1, 100, "مبتدئ", "🥉", "#FFD700"));
        levelDefinitions.put(2, new LevelDefinition(2, 1000, "متقدم", "🥈", "#C0C0C0"));
        levelDefinitions.put(3, new LevelDefinition(3, 5000, "خبير", "🥇", "#FFD700"));
        levelDefinitions.put(4, new LevelDefinition(4, 10000, "ماجستير", "🏆", "#4CAF50"));
        levelDefinitions.put(5, new LevelDefinition(5, 25000, "أستاذ", "👑", "#2196F3"));
        
        System.out.println("LEVEL CONFIG: Initialized " + levelDefinitions.size() + " default level definitions");
    }

    /**
     * تحديث تعريف مستوى معين
     */
    public void updateLevelDefinition(int level, LevelDefinition definition) {
        if (level > 0 && definition != null) {
            levelDefinitions.put(level, definition);
            System.out.println("LEVEL CONFIG: Updated level " + level + " definition");
        }
    }

    /**
     * إضافة تعريف مستوى جديد
     */
    public void addLevelDefinition(int level, int requiredWins, String levelName, 
                                 String badgeEmoji, String badgeColor) {
        LevelDefinition definition = new LevelDefinition(level, requiredWins, levelName, badgeEmoji, badgeColor);
        levelDefinitions.put(level, definition);
        System.out.println("LEVEL CONFIG: Added level " + level + " definition");
    }

    /**
     * إزالة تعريف مستوى
     */
    public void removeLevelDefinition(int level) {
        LevelDefinition removed = levelDefinitions.remove(level);
        if (removed != null) {
            System.out.println("LEVEL CONFIG: Removed level " + level + " definition");
        }
    }

    /**
     * الحصول على تعريف مستوى معين
     */
    public LevelDefinition getLevelDefinition(int level) {
        return levelDefinitions.get(level);
    }

    /**
     * الحصول على جميع تعريفات المستويات
     */
    public Map<Integer, LevelDefinition> getLevelDefinitions() {
        return new ConcurrentHashMap<>(levelDefinitions);
    }

    /**
     * التحقق من وجود تعريف مستوى
     */
    public boolean hasLevelDefinition(int level) {
        return levelDefinitions.containsKey(level);
    }

    /**
     * الحصول على أعلى مستوى معرف
     */
    public int getMaxDefinedLevel() {
        return levelDefinitions.keySet().stream().mapToInt(Integer::intValue).max().orElse(1);
    }

    /**
     * مسح جميع تعريفات المستويات (للاختبارات)
     */
    public void clearAllLevelDefinitions() {
        levelDefinitions.clear();
        System.out.println("LEVEL CONFIG: Cleared all level definitions");
    }

    // --- تعريف المستوى ---
    public static final class LevelDefinition {
        private final int level;
        private final int requiredWins;
        private final String levelName;
        private final String badgeEmoji;
        private final String badgeColor;

        public LevelDefinition(int level, int requiredWins, String levelName, 
                              String badgeEmoji, String badgeColor) {
            this.level = level;
            this.requiredWins = requiredWins;
            this.levelName = levelName;
            this.badgeEmoji = badgeEmoji;
            this.badgeColor = badgeColor;
        }

        // Getters
        public int getLevel() { return level; }
        public int getRequiredWins() { return requiredWins; }
        public String getLevelName() { return levelName; }
        public String getBadgeEmoji() { return badgeEmoji; }
        public String getBadgeColor() { return badgeColor; }
        
        @Override
        public String toString() {
            return "LevelDefinition{" +
                "level=" + level +
                ", requiredWins=" + requiredWins +
                ", levelName='" + levelName + '\'' +
                ", badgeEmoji='" + badgeEmoji + '\'' +
                ", badgeColor='" + badgeColor + '\'' +
                '}';
        }
    }

    // --- Builders ---
    public static final class LevelDefinitionBuilder {
        private int level;
        private int requiredWins;
        private String levelName;
        private String badgeEmoji;
        private String badgeColor;

        public LevelDefinitionBuilder level(int level) { this.level = level; return this; }
        public LevelDefinitionBuilder requiredWins(int requiredWins) { this.requiredWins = requiredWins; return this; }
        public LevelDefinitionBuilder levelName(String levelName) { this.levelName = levelName; return this; }
        public LevelDefinitionBuilder badgeEmoji(String badgeEmoji) { this.badgeEmoji = badgeEmoji; return this; }
        public LevelDefinitionBuilder badgeColor(String badgeColor) { this.badgeColor = badgeColor; return this; }

        public LevelDefinition build() {
            return new LevelDefinition(level, requiredWins, levelName, badgeEmoji, badgeColor);
        }
    }

    // --- Getters ---
    public int getLevelDefinitionCount() { return levelDefinitions.size(); }
    public boolean isEmpty() { return levelDefinitions.isEmpty(); }
    
    /**
     * إعادة تعيين الإعدادات (للاختبارات)
     */
    public void reset() {
        levelDefinitions.clear();
        initializeDefaultLevelDefinitions();
        System.out.println("LEVEL CONFIG: Reset completed");
    }
}