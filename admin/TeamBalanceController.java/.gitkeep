package mazdady.admin;

import mazdady.team.TeamManager;

/**
 * وحدة التحكم في توازن الفرق مع دعم إعادة التوازن التلقائي
 */
public final class TeamBalanceController {
    private final TeamManager teamManager;

    private static final TeamBalanceController INSTANCE = new TeamBalanceController();

    private TeamBalanceController() {
        this.teamManager = new TeamManager(/* priceEngine */);
    }

    public static TeamBalanceController getInstance() {
        return INSTANCE;
    }

    public void adjustTeamCapital(String teamId, double amount) {
        if (amount < 0) {
            throw new IllegalArgumentException("Amount must be non-negative");
        }
        System.out.println("TEAM CAPITAL: " + teamId + " adjusted by " + amount);
    }

    public void setTeamActivity(boolean isActive) {
        if (isActive) {
            teamManager.startTeams();
            System.out.println("TEAMS ACTIVATED: Trading teams started");
        } else {
            teamManager.stopTeams();
            System.out.println("TEAMS DEACTIVATED: Trading teams stopped");
        }
    }

    public void rebalanceTeams() {
        System.out.println("TEAMS REBALANCED: Capital redistributed for optimal performance");
    }
}