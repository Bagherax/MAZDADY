package mazdady.admin;

import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import mazdady.ui.ImageUploader;
import mazdady.ui.ElementBackgroundManager;

/**
 * محرر واجهة المستخدم مع دعم رفع الصور من الهاتف
 * يتبع نمط Facade لتوفير واجهة موحدة
 */
public final class UIEditor extends LinearLayout {
    private final Context context;
    private final ImageUploader imageUploader;
    private final ElementBackgroundManager backgroundManager;
    private String currentElementId;
    private static final int PICK_IMAGE_REQUEST = 1001;

    public UIEditor(Context context) {
        super(context);
        this.context = context.getApplicationContext();
        this.imageUploader = ImageUploader.getInstance(context);
        this.backgroundManager = ElementBackgroundManager.getInstance(context);
        initializeEditor();
    }

    private void initializeEditor() {
        setOrientation(VERTICAL);
        setPadding(20, 20, 20, 20);
        
        // زر رفع صورة من الهاتف
        Button uploadImageButton = new Button(context);
        uploadImageButton.setText("رفع صورة من الهاتف");
        uploadImageButton.setOnClickListener(v -> openImagePicker());
        
        // زر إزالة الصورة
        Button removeImageButton = new Button(context);
        removeImageButton.setText("إزالة الصورة");
        removeImageButton.setOnClickListener(v -> removeCurrentImage());
        
        // زر تعيين لون الخلفية
        Button setBackgroundColorButton = new Button(context);
        setBackgroundColorButton.setText("تعيين لون الخلفية");
        setBackgroundColorButton.setOnClickListener(v -> openColorPicker());
        
        // إضافة العناصر إلى المحرر
        addView(createHeader());
        addView(uploadImageButton);
        addView(removeImageButton);
        addView(setBackgroundColorButton);
        addView(createStatusView());
        
        System.out.println("UI EDITOR: Initialized with image upload support");
    }

    private TextView createHeader() {
        TextView header = new TextView(context);
        header.setText("محرر واجهة المستخدم");
        header.setTextSize(20);
        header.setPadding(0, 0, 0, 20);
        return header;
    }

    private TextView createStatusView() {
        TextView statusView = new TextView(context);
        statusView.setText("جاهز لتحميل الصور");
        statusView.setTextSize(14);
        statusView.setPadding(0, 20, 0, 0);
        return statusView;
    }

    private void openImagePicker() {
        Intent intent = new Intent(Intent.ACTION_PICK);
        intent.setType("image/*");
        // في الإنتاج: startActivityForResult(intent, PICK_IMAGE_REQUEST);
        System.out.println("UI EDITOR: Opening image picker");
    }

    private void openColorPicker() {
        // في الإنتاج: فتح منتقي الألوان
        System.out.println("UI EDITOR: Opening color picker");
    }

    private void removeCurrentImage() {
        if (currentElementId != null) {
            imageUploader.removeImage(currentElementId);
            System.out.println("UI EDITOR: Removed image for element " + currentElementId);
        }
    }

    /**
     * معالجة نتيجة اختيار الصورة
     */
    public void handleImagePickResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == PICK_IMAGE_REQUEST && resultCode == android.app.Activity.RESULT_OK) {
            Uri imageUri = data.getData();
            if (imageUri != null && currentElementId != null) {
                uploadImageForElement(currentElementId, imageUri);
            }
        }
    }

    private void uploadImageForElement(String elementId, Uri imageUri) {
        imageUploader.uploadImageFromPhoneAsync(elementId, imageUri)
            .thenAccept(result -> {
                if (result.isSuccess()) {
                    System.out.println("UI EDITOR: Image uploaded successfully for " + elementId);
                    // تحديث واجهة المستخدم
                    updateElementBackground(elementId, result.getFileName());
                } else {
                    System.err.println("UI EDITOR ERROR: " + result.getMessage());
                }
            });
    }

    private void updateElementBackground(String elementId, String fileName) {
        // في الإنتاج: تحديث عنصر واجهة المستخدم
        System.out.println("UI EDITOR: Updated background for " + elementId + " with " + fileName);
    }

    /**
     * تعيين العنصر الحالي للتحرير
     */
    public void setCurrentElement(String elementId) {
        this.currentElementId = elementId;
        System.out.println("UI EDITOR: Current element set to " + elementId);
    }

    // --- Getters ---
    public String getCurrentElementId() { return currentElementId; }
    public boolean hasCurrentElement() { return currentElementId != null; }
    
    /**
     * إيقاف المحرر (للاختبارات)
     */
    public void shutdown() {
        System.out.println("UI EDITOR: Shutdown completed");
    }
}