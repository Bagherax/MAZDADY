package mazdady.admin;

import mazdady.bot.BotManager;
import mazdady.bot.TradingBot;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.function.BiConsumer;

/**
 * وحدة التحكم في البوتات مع دعم الاستراتيجيات الديناميكية
 * يتبع نمط Strategy لفصل سلوك البوتات
 */
public final class BotController {
    private final BotManager botManager;
    private final Map<String, BiConsumer<String, String>> botStrategies;

    private BotController() {
        this.botManager = BotManager.getInstance();
        this.botStrategies = new ConcurrentHashMap<>();
        initializeStrategies();
    }

    private static class Holder {
        static final BotController INSTANCE = new BotController();
    }

    public static BotController getInstance() {
        return Holder.INSTANCE;
    }

    private void initializeStrategies() {
        botStrategies.put("trading", (botId, behavior) -> {
            TradingBot bot = botManager.getTradingBot(botId);
            if (bot != null) {
                bot.setBehavior(behavior);
                System.out.println("BOT BEHAVIOR: " + botId + " behavior set to " + behavior);
            }
        });
        botStrategies.put("liquidity", (botId, behavior) -> {
            // في الإنتاج: تعديل سلوك بوت السيولة
            System.out.println("LIQUIDITY BOT: " + botId + " behavior set to " + behavior);
        });
    }

    public void activateTradingBots() {
        botManager.startAllBots();
        System.out.println("BOTS ACTIVATED: All trading bots started");
    }

    public void deactivateTradingBots() {
        botManager.stopAllBots();
        System.out.println("BOTS DEACTIVATED: All trading bots stopped");
    }

    public void setBotBehavior(String botType, String botId, String behavior) {
        BiConsumer<String, String> strategy = botStrategies.get(botType);
        if (strategy != null) {
            strategy.accept(botId, behavior);
        } else {
            throw new IllegalArgumentException("Unsupported bot type: " + botType);
        }
    }
}