package mazdady.withdrawal;

import mazdady.user.User;
import mazdady.admin.AdminConfig;

public class WithdrawalRulesEngine {
    private AdminConfig config;

    public WithdrawalRulesEngine() {
        this.config = AdminConfig.getInstance();
    }

    public WithdrawalResult canWithdraw(User user, double amount) {
        if (user.getLevel() < config.getMinWithdrawalLevel()) {
            return new WithdrawalResult(false, "يجب أن تكون في المستوى " + config.getMinWithdrawalLevel() + " على الأقل.");
        }

        double weeklyLimit = config.getWeeklyLimitForLevel(user.getLevel());
        if (user.getWeeklyWithdrawn() + amount > weeklyLimit) {
            double remaining = weeklyLimit - user.getWeeklyWithdrawn();
            return new WithdrawalResult(false, "الحد الأسبوعي المتبقي: " + remaining + " MAZDADY");
        }

        if (!config.isTodayWithdrawalDay()) {
            return new WithdrawalResult(false, "يوم السحب القادم: " + config.getNextWithdrawalDate());
        }

        if (!user.isKYCVerified()) {
            return new WithdrawalResult(false, "يجب توثيق هويتك قبل السحب.");
        }

        return new WithdrawalResult(true, "يمكنك السحب.");
    }

    public static class WithdrawalResult {
        private final boolean allowed;
        private final String message;

        public WithdrawalResult(boolean allowed, String message) {
            this.allowed = allowed;
            this.message = message;
        }

        public boolean isAllowed() { return allowed; }
        public String getMessage() { return message; }
    }
}